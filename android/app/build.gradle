// cấu hình de build 2 app cung luc file apk tren anhdroid dùng ./gradlew assembleRelease rồi adb install -r app/build/outputs/apk/release/app-universal-release.apk
// cách build anhdroid
// Bước 1 : cd android
//Bước 2: ./gradlew assembleRelease
// Bước 3: adb install -r app/build/outputs/apk/release/app


//debug
//npx react-native start --reset-cache
//cd android -> .\gradlew clean
// cd.. -> npx react-native run-android


plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "com.facebook.react"
    id "com.google.gms.google-services"
}

react {
    // Giữ mặc định
}

def enableProguardInReleaseBuilds = false
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    namespace "com.visacoop"
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.visacoop" 
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        // Chỉ định flavor mặc định cho react-native-camera
        missingDimensionStrategy 'react-native-camera', 'general'
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            if (project.hasProperty("MYAPP_UPLOAD_STORE_FILE")) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            // ❌ Bỏ applicationIdSuffix để debug và release cùng tên com.visacoop
            // applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled enableProguardInReleaseBuilds
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    // Tách ABI để build universal APK
    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a","arm64-v8a","x86","x86_64"
            universalApk true
        }
    }

    dependenciesInfo {
        includeInApk false
        includeInBundle false
    }

    // Nếu debug không cần FCM, có thể tắt task Google Services (optional)
    // Nếu muốn test FCM trên debug, xoá block này đi
    // afterEvaluate {
    //     tasks.matching { it.name =~ /processDebugGoogleServices|mergeDebugGoogleServices/ }.all {
    //         enabled = false
    //     }
    // }
}

configurations.all {
    resolutionStrategy {
        force 'androidx.core:core:1.12.0'
        force 'androidx.core:core-ktx:1.12.0'
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    implementation("androidx.core:core:1.12.0")
    implementation("androidx.core:core-ktx:1.12.0")
    implementation("com.google.android.gms:play-services-location:20.0.0")
    implementation("com.google.firebase:firebase-messaging:23.4.0")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")

// Autolink RN native modules
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle");
applyNativeModulesAppBuildGradle(project)
