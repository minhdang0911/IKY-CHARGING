plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "com.facebook.react"
    id "com.google.gms.google-services"
}

react { /* ƒë·ªÉ m·∫∑c ƒë·ªãnh */ }

def enableProguardInReleaseBuilds = true    // n√™n b·∫≠t
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    namespace "com.visacoop"
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.visacoop"        // ID CH√çNH cho release
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        missingDimensionStrategy 'react-native-camera', 'general'
        multiDexEnabled true
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        // t·∫°o keystore th·∫≠t r·ªìi ƒëi·ªÅn ·ªü gradle.properties ƒë·ªÉ kh·ªèi l·ªô pass
        release {
            if (project.hasProperty("MYAPP_UPLOAD_STORE_FILE")) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            // üëâ th√™m suffix ƒë·ªÉ c√†i song song: com.visacoop.debug
            // applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug
        }
       release {
    signingConfig signingConfigs.release
    minifyEnabled false
    shrinkResources false
}

    }

    // (t√πy ch·ªçn) t√°ch theo ABI v√† build universal
    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a","arm64-v8a","x86","x86_64"
            universalApk true
        }
    }

    dependenciesInfo {
        includeInApk false
        includeInBundle false
    }
}

configurations.all {
    resolutionStrategy {
        force 'androidx.core:core:1.12.0'
        force 'androidx.core:core-ktx:1.12.0'
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    implementation("androidx.core:core:1.12.0")
    implementation("androidx.core:core-ktx:1.12.0")
    implementation("com.google.android.gms:play-services-location:20.0.0")
    implementation("com.google.firebase:firebase-messaging:23.4.0")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
